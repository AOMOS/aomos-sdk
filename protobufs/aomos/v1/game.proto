syntax = "proto3";

package aomos.v1;

message Game {
  enum State {
    STATE_UNSPECIFIED = 0;
    STATE_READY = 1;
    STATE_RUNNING = 2;
    STATE_STOPPING = 3;
  }
  State state = 1;
}

message GameReady {}
message GameStarted {}
message GameStopped {}

message GetGameRequest {}
message GetGameResponse {
  Game game = 1;
}

message StartGameRequest {}
message StartGameResponse {}

message StopGameRequest {}
message StopGameResponse {}

message SubscribeEventsRequest {}
message SubscribeEventsResponse {
  oneof event {
    GameReady game_ready = 1;
    GameStarted game_started = 2;
    GameStopped game_stopped = 3;
  }
}

service GameService {
  rpc GetGame(GetGameRequest) returns (GetGameResponse);
  rpc StartGame(StartGameRequest) returns (StartGameResponse);
  rpc StopGame(StopGameRequest) returns (StopGameResponse);
  rpc SubscribeEvents(SubscribeEventsRequest) returns (stream SubscribeEventsResponse);
}
